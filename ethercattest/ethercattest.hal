
loadrt    [KINS]KINEMATICS
loadrt    [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
#loadrt    hostmot2
#loadrt    hm2_eth board_ip="10.10.10.10" config="num_encoders=1 num_pwmgens=0 num_stepgens=5 sserial_port_0=222000" 
#setp      hm2_7i92.0.watchdog.timeout_ns 50000000

loadusr     -W lcec_conf ethercat-conf.xml
loadrt      lcec
loadrt cia402 count=1
loadrt pid names=pid.x,pid.y,pid.z

###########################################################
# Functions servo-thread
###########################################################

addf lcec.read-all servo-thread
addf cia402.0.read-all servo-thread

addf motion-command-handler servo-thread
addf motion-controller servo-thread

addf pid.x.do-pid-calcs servo-thread
addf pid.y.do-pid-calcs servo-thread
addf pid.z.do-pid-calcs servo-thread

addf cia402.0.write-all servo-thread
addf lcec.write-all servo-thread

#########################################
#nets
#########################################
net emc-enable => iocontrol.0.emc-enable-in
sets emc-enable 1


# Config for RINTELLENT ECT60

#config
setp cia402.0.csp-mode 1
setp cia402.0.pos-scale 3600

#from servo(ethercat) to cia402
net x-statusword      lcec.0.axis0.cia-statusword => cia402.0.statusword
net x-opmode-display  lcec.0.axis0.opmode-display => cia402.0.opmode-display
net x-drv-act-pos     lcec.0.axis0.actual-position => cia402.0.drv-actual-position
net x-drv-act-velo    lcec.0.axis0.actual-velocity => cia402.0.drv-actual-velocity

#from cia402 to servo(ethercat) 
net x-controlword         cia402.0.controlword => lcec.0.axis0.cia-controlword
net x-modes-of-operation  cia402.0.opmode => lcec.0.axis0.opmode
net x-drv-target-pos      cia402.0.drv-target-position => lcec.0.axis0.target-position
net x-drv-target-velo     cia402.0.drv-target-velocity => lcec.0.axis0.target-velocity

#from motion to cia
net x-enable    <= joint.0.amp-enable-out => cia402.0.enable
net x-amp-fault => joint.0.amp-fault-in   <= cia402.0.drv-fault
net x-pos-cmd   <= joint.0.motor-pos-cmd  => cia402.0.pos-cmd
net x-pos-fb    => joint.0.motor-pos-fb   <= cia402.0.pos-fb

#homing
net x-home-index <= joint.0.index-enable  => cia402.0.home



# Sample Config for DELTA


#*******************
#  AXIS X JOINT 0 U20 W2020 W2021
#*******************

# Signal chain:
# joint --> PID --> STEPGEN (MESA) // Servo

setp        pid.y.Pgain                                 [JOINT_1]P
setp        pid.y.Igain                                 [JOINT_1]I
setp        pid.y.Dgain                                 [JOINT_1]D
setp        pid.y.bias                                  [JOINT_1]BIAS
setp        pid.y.FF0                                   [JOINT_1]FF0
setp        pid.y.FF1                                   [JOINT_1]FF1
setp        pid.y.FF2                                   [JOINT_1]FF2
setp        pid.y.deadband                              [JOINT_1]DEADBAND
setp        pid.y.maxoutput                             [JOINT_1]MAX_OUTPUT
setp        pid.y.error-previous-target                 true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp        pid.y.maxerror 0.012700

net         y-index-enable                              <=> pid.y.index-enable
net         y-enable                                    =>  pid.y.enable
net         y-pos-cmd                                   =>  pid.y.command
net         y-pos-fb                                    =>  pid.y.feedback
net         y-output                                    <=  pid.y.output        # this is a velocity

# this is the mm per REF that is othervise known as step_scale
setp lcec.0.3A1.pos-scale -5
# This should not be touched. 
#setp lcec.0.3A1.srv-pulses-per-rev 10000
# This is only relevant when an extenral encoder is being used.
setp lcec.0.3A1.extenc-scale 1 # not used as we have not connected the scale


# Signals to servo
# the config below is a open loop within joint (ideal controler)
net         y-pos-cmd                                   <= joint.1.motor-pos-cmd
net         y-vel-cmd                                   joint.1.vel-cmd   
#net         y-vel-cmd                                   =>  lcec.0.3A1.srv-vel-cmd 
#net         y-pos-fb                                    => joint.1.motor-pos-fb  

net         y-pos-fb                                    lcec.0.3A1.enc-pos-enc 
net         y-output                                    <= lcec.0.3A1.srv-vel-cmd
# Joint also needs a feedback!
net         y-pos-fb                                    joint.1.motor-pos-fb

#lcec.0.3A1.enc-pos
net         y-enable                                    <= joint.1.amp-enable-out
#net         y-enable                                    => [HMOT](CARD0).stepgen.00.enable
net         y-alarm                                   joint.1.amp-fault-in

net y-alarm <= lcec.0.3A1.srv-fault

# Servo on
net y-enable => lcec.0.3A1.srv-switch-on

setp lcec.0.3A1.srv-enable-volt 1

net x-enable => lcec.0.3A1.srv-enable

# ---setup home / limit switch signals---

net         limit-axis                                  => lcec.0.D2.din-0-not
net         limit-axis                           => joint.1.home-sw-in
net         limit-axis                           => joint.1.neg-lim-sw-in
net         axis-pos-limit                                 => joint.1.pos-lim-sw-in lcec.0.D2.din-2-not
